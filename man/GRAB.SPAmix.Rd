% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SPAmix.R
\name{GRAB.SPAmix}
\alias{GRAB.SPAmix}
\title{SPAmix method in GRAB package}
\usage{
GRAB.SPAmix()
}
\description{
SPAmix method is an empirical approach to analyzing complex traits (including but not limited to time-to-event trait) for unrelated samples in a large-scale biobank. SPAmix extend SPACox to support an admixture population or multiple populations.
}
\details{
For \code{SPAmix}, the confounding factors of SNP-derived PCs are required and should be specified in \code{control}.
}
\examples{
# Step 1: fit a null model
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
PhenoData = data.table::fread(PhenoFile, header = T)
N = nrow(PhenoData)
PhenoData = PhenoData \%>\% mutate(PC1 = rnorm(N), PC2 = rnorm(N))  # add two PCs, which are required for SPAmix

# Users can directly specify a time-to-event trait to analyze
obj.SPAmix = GRAB.NullModel(Surv(SurvTime, SurvEvent) ~ AGE + GENDER + PC1 + PC2, 
                            data = PhenoData, 
                            subjData = IID, 
                            method = "SPAmix", 
                            traitType = "time-to-event",
                            control = list(PC_columns = "PC1,PC2"))

# Using model residuals performs exactly the same as the above. Note that confounding factors are still required in the right of the formula.
obj.coxph = coxph(Surv(SurvTime, SurvEvent)~AGE+GENDER+PC1+PC2, data = PhenoData)
obj.SPAmix = GRAB.NullModel(obj.coxph$residuals ~ AGE + GENDER + PC1 + PC2, 
                            data = PhenoData, 
                            subjData = IID, 
                            method = "SPAmix", 
                            traitType = "Residual",
                            control = list(PC_columns = "PC1,PC2"))
                            
# SPAmix also supports multiple residuals as below                           
obj.coxph = coxph(Surv(SurvTime, SurvEvent)~AGE+GENDER+PC1+PC2, data = PhenoData)
obj.lm = lm(QuantPheno ~ AGE+GENDER+PC1+PC2, data = PhenoData)
obj.SPAmix = GRAB.NullModel(obj.coxph$residuals + obj.lm$residuals ~ AGE + GENDER + PC1 + PC2, 
                            data = PhenoData, 
                            subjData = IID, 
                            method = "SPAmix", 
                            traitType = "Residual",
                            control = list(PC_columns = "PC1,PC2"))
                             
# Step 2: conduct score test
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
OutputDir = system.file("results", package = "GRAB")
OutputFile = paste0(OutputDir, "/Results_SPAmix.txt")
GRAB.Marker(obj.SPAmix, GenoFile = GenoFile, OutputFile = OutputFile, control = list(outputColumns = "zScore"))
data.table::fread(OutputFile)
}
