t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
Mst0
Mst00
Mst1
rho
Mst2
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
seed = sample(1e5, 1)
set.seed(seed)
cat("seed:",seed,"/n")
# set.seed(6841)
# set.seed(9493)
b1 = rnorm(1)
b2 = rnorm(1)
t = rnorm(1)
mu = 0.3
rho = 1
# rho = 0.5
MstMat = c()
for(t in seq(-2,2,0.1)){
Mst1 = (1-mu+mu*exp(t*b1))^2 * (1-mu+mu*exp(t*b2))^2
Hst1 = mu*exp(2*t*b1) + (1-2*mu) * exp(t*b1) - (1-mu)
Hst2 = mu*exp(2*t*b2) + (1-2*mu) * exp(t*b2) - (1-mu)
Mst2 = 2*mu*(1-mu) * Hst1 * Hst2
Mst0 = Mst1 + rho * Mst2
# Mst00 = Mst.type1(mu, b1, b2, t)
Mst00 = Mst.type2(mu, b1, b2, t)
MstMat = rbind(MstMat,
cbind(t,
c(Mst0, Mst00),
c("Est", "True")))
}
MstMat = data.frame(MstMat)
MstMat$V2 = as.numeric(MstMat$V2)
MstMat$t = as.numeric(MstMat$t)
library(ggplot2)
ggplot(MstMat, aes(t, V2, color=V3)) + geom_point() +
ggtitle(paste("b1:",round(b1,3), "   b2:",round(b2,3)))
?lm
5/29
200e3 * 0.0001
4980*0.03
a=matrix(1:1e6,1e3,1e3)
object.size(a)
object.size(a) / 1024^3
object.size(a) / 1024^2
a=matrix(1:1e8,1e4,1e4)
object.size(a) / 1024^2
386170 / 10000
380/4
?GRAB.NullModel
library(GRAB)
?GRAB.NullModel
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
data.table::fread(SparseGRMFile)
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoFile
GenoFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
subjData
subjData
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
GenoFileIndex
GenoFile
subjData = NULL
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
summary(genoList)
genoList$genoType
genoList$markerInfo
genoList$SampleIDs
summary(genoList)
GenoFile=NULL
GenoFile = NULL
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
response="aa"
stop("The response variable in POLMM method should be a factor. The class of the current response variable is ",
class(response))
stop("The response variable in POLMM method should be a factor. The class of the current response variable is ",
class(response), ".")
stop("The response variable in POLMM method should be a factor. The class of the current response variable is '",
class(response), "'.")
library(GRAB)
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau    # 0.5681122
# GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
subjData = NULL
GenoFile = NULL
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
# GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
subjData = NULL
# GenoFile = NULL
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
genoList$markerInfo
library(GRAB)
GenoFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
subjData = NULL
# GenoFile = NULL
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
genoList$markerInfo
markerInfo = genoList$markerInfo
class(markerInfo)
markerInfo = data.table::as.data.table(markerInfo)
markerInfo
ncol(markerInfo)
GenoFileIndex = c(gsub("bgen$", "bgen.bgi", GenoFile),
gsub("bgen$", "sample", GenoFile))
bgiFile = GenoFileIndex[1]
db_con <- RSQLite::dbConnect(RSQLite::SQLite(), bgiFile)
on.exit(RSQLite::dbDisconnect(db_con), add = TRUE)
bgiData = dplyr::tbl(db_con, "Variant")
bgiData
class(bgiData)
bgiData
bgiData %>% select(chromosome, position)
bgiData %>% tidyr::select(chromosome, position)
bgiData %>% dplyr::select(chromosome, position)
# GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
GenoFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
subjData = NULL
# GenoFile = NULL
genoList = setGenoInput(GenoFile, GenoFileIndex, subjData)   # check Geno.R for more details
genoList$markerInfo
unique(genoList$markerInfo$CHROM)
summary(genoList)
genoList$markerInfo
head(genoList$markerInfo)
colnames(genoList$markerInfo)
markerInfo = data.table::as.data.table(markerInfo)
markerInfo
unique(markerInfo$CHROM)
temp = markerInfo %>% filter(CHROM == iCHR)
markerInfo
iCHR="1"
markerInfo %>% filter(CHROM == iCHR)
11046827/3600e3
m=100
sample(m)
library(GRAB)
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau    # 0.5681122
library(GRAB)
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau    # 0.5681122
library(GRAB)
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau    # 0.5681122
GenoFile = system.file("extdata", "simuBGEN.bgen", package = "GRAB")
GenoFile
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau    # 0.5681122
GenoFile = system.file("extdata", "simuPLINK.bed", package = "GRAB")
PhenoFile = system.file("extdata", "simuPHENO.txt", package = "GRAB")
Pheno = read.table(PhenoFile, header = T)
SparseGRMFile = system.file("SparseGRM", "SparseGRM.txt", package = "GRAB")
objNullFile = system.file("results", "objNull.RData", package = "GRAB")
objNull = GRAB.NullModel(as.factor(ordinal) ~ Cova1 + Cova2,
data = Pheno,
subset = (event==0),
subjData = Pheno$IID,
method = "POLMM",
traitType = "ordinal",
GenoFile = GenoFile,
SparseGRMFile = SparseGRMFile)
objNull$tau    # 0.5681122
OutputFileIndex="/home/wenjianb"
indexChunk=1
message = paste0("We detected that parts of analysis have been conducted from file:\t",
OutputFileIndex,"\n",
"We restart the analysis from chunk:\t",indexChunk+1,"\n");
cat(message)
library(GRAB)
library(dplyr)
library(ggplot2)
library(gridExtra)
set.seed(1)
N = 10000
# model misspecification: miss some important covariates in the model fitting
data0 = data.table::data.table(G = rbinom(N, 2, 0.1),
X1 = rnorm(N),
X2 = rbinom(N, 1, 0.5),
error = rnorm(N))
data0 = data0 %>% mutate(Y = X1 * 0.5 + X2 * 0.5 + G * 2)
table(data0$G)
p1 = ggplot(data0, aes(as.factor(G), Y)) + geom_boxplot()
p2 = ggplot(data0, aes(Y)) + geom_histogram()
grid.arrange(p1, p2)
View(data0)
